# -*- coding: utf-8 -*-
"""[SCHF] Round 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NCWdQMy5obTrImCRvaIYFcvUChRmBBDi
"""

import pandas as pd

df_demand=pd.read_excel('https://github.com/schackfest/data/blob/main/DATA_ROUND2_SCHACKFEST2022.xlsx?raw=true',sheet_name='1_DEMAND')
df_demand=df_demand.melt('ITEM').rename(columns={ 'variable':'demand_month','value':'SL_hangban'}).sort_values(by='ITEM')
df_demand.head()

for ind, data in df_demand.iterrows():
  df_demand.loc[ind,'demand_month']=df_demand.loc[ind,'demand_month'].replace('_','-')
df_demand['demand_month']=df_demand['demand_month'].astype('datetime64[ns]')
df_demand

df_inv_12=pd.read_excel('https://github.com/schackfest/data/blob/main/DATA_ROUND2_SCHACKFEST2022.xlsx?raw=true',sheet_name='3_SUPPLY-SOH').rename(columns={'TỒN KHO CUỐI NGÀY 31/12/2022':'Qty','HẠN SỬ DỤNG':'HSD'})
df_inv_12.head()

df_bom=pd.read_excel('https://github.com/schackfest/data/blob/main/DATA_ROUND2_SCHACKFEST2022.xlsx?raw=true',sheet_name='2_BOM',usecols='A,B,C,D').rename(columns={'SỐ LƯỢNG NGUYÊN LIỆU \n(TRÊN 1 TẤN THÀNH PHẨM)':'BOM','ĐƠN VỊ CỦA NGUYÊN LIỆU':'ĐƠN VỊ'})
df_bom.head()

"""# Bước 1: Xác định số lượng sản xuất hàng tháng"""

df_demand=df_demand.sort_values(by='demand_month')
df_demand_item=df_demand[df_demand['demand_month']=='2023-01-01']
df_demand_item

df_item_1=df_demand_item.merge(df_inv_12,on='ITEM')
df_item_1['Qty']=df_item_1['Qty']/1000
df_item_1['ĐƠN VỊ']='1000 kg'
df_item_1['SL_conlai']=df_item_1['SL_hangban']-df_item_1['Qty']
df_item_1['SL_sanxuat']=df_item_1['SL_hangban']+df_item_1['SL_conlai']-df_item_1['Qty']
df_item_1

df_conlai=df_item_1[['ITEM','SL_conlai','ĐƠN VỊ']].rename(columns={'ITEM':'NGUYÊN LIỆU'})
df_conlai

df_sanxuat=df_item_1[['ITEM','SL_sanxuat']]
df_sanxuat

df_demand_1=df_bom.merge(df_sanxuat,left_on='THÀNH PHẨM', right_on='ITEM')
df_demand_1['demand_bom']=df_demand_1['BOM']*df_demand_1['SL_sanxuat']
df_demand_1=df_demand_1[['NGUYÊN LIỆU','demand_bom','ĐƠN VỊ']]
df_demand_1

df_demand_1_2=df_demand_1.groupby('NGUYÊN LIỆU')['demand_bom'].sum().to_frame()      #Demand Column tháng
df_demand_1_2.head()

"""# Bước 2: Tìm cumsum supply theo nguyên liệu"""

df_moq=pd.read_excel('https://github.com/schackfest/data/blob/main/DATA_ROUND2_SCHACKFEST2022.xlsx?raw=true',sheet_name='5_ITEM MASTER - RAW',usecols='A,C,F,E,G').rename(columns={'SHELF LIFE ĐƯỢC ƯỚC TÍNH KỂ TỪ NGÀY NHẬP KHO (NGÀY)':'shelf_life','ITEM':'NGUYÊN LIỆU','MOQ':'Qty','Đơn vị':'ĐƠN VỊ'})
df_moq

df_inv_m=df_inv_12[(df_inv_12['ITEM']!='THỨC_ĂN_CHO_HEO')&(df_inv_12['ITEM']!='THỨC_ĂN_CHO_CÁ')]
df_inv_m=df_inv_m[['ITEM','Qty','HSD','ĐƠN VỊ']].rename(columns={'ITEM':'NGUYÊN LIỆU'})
df_inv_m.head()

df_cal=df_demand_1_2.merge(df_inv_m,on='NGUYÊN LIỆU')
df_cal

df_ong=pd.read_excel('https://github.com/schackfest/data/blob/main/DATA_ROUND2_SCHACKFEST2022.xlsx?raw=true',sheet_name='4_SUPPLY-ONGOING',usecols='A,D,E,F').rename(columns={'SỐ LƯỢNG':'Qty','HẠN SỬ DỤNG':'HSD'})
df_ong

d=df_cal['NGUYÊN LIỆU'].unique()
for e_m in d:
  n=int(df_cal.loc[df_cal['NGUYÊN LIỆU']==e_m,'demand_bom'].item()//df_moq.loc[df_moq['NGUYÊN LIỆU']==e_m,'Qty'].item()+1)
  for i in range(n):
    df_cal = pd.concat([df_cal,df_moq[df_moq['NGUYÊN LIỆU']==e_m]],axis=0)
df_cal=pd.concat([df_cal,df_ong],axis=0)
df_cal.head()

df_cal_2=df_cal.sort_values(by=['NGUYÊN LIỆU','HSD'])
df_cal_2['demand_bom']=df_cal_2['demand_bom'].ffill()
df_cal_2.head()

df_cal_2['last_date']=pd.to_datetime('2023-02-01')
df_cal_2['begin_date']=pd.to_datetime('2023-01-01')
df_cal_2=df_cal_2.reset_index(drop=True)
df_cal_2.head()

for ind, data in df_cal_2.iterrows():
  d=(df_cal_2.loc[ind,'last_date']-df_cal_2.loc[ind,'begin_date']).days
  if df_cal_2.loc[ind,'HSD']<df_cal_2.loc[ind,'last_date']:
    df_cal_2.loc[ind,'real_spl']=min((df_cal_2.loc[ind,'HSD']-df_cal_2.loc[ind,'begin_date']).days*df_cal_2.loc[ind,'demand_bom']/d,df_cal_2.loc[ind,'Qty'])
  else:
    df_cal_2.loc[ind,'real_spl']=df_cal_2.loc[ind,'Qty']
df_cal_2['Cumsum_spl']=df_cal_2.groupby('NGUYÊN LIỆU')['real_spl'].cumsum()
df_cal_2['SL_hangthieu']=df_cal_2['demand_bom']-df_cal_2['Cumsum_spl']
df_cal_2

"""# Bước 3: Tìm số lượng picking """

def ham_remain(df_in):
  for ind, data in df_in.iterrows():    
    SL_hangthieu=df_in.loc[ind,'SL_hangthieu']
    if df_in.loc[ind,'HSD']<df_in.loc[ind,'last_date']:
        df_in.loc[ind,'SL_conlai']=0
    else:
        if SL_hangthieu >= 0:
            df_in.loc[ind,'SL_conlai']=0
        else: 
            df_in.loc[ind,'SL_conlai']=df_in.loc[ind,'Qty']
  max_ind= df_in['SL_hangthieu'].lt(0).idxmax()
  df_in.loc[max_ind,'SL_conlai']= - (df_in.loc[max_ind,'SL_hangthieu'])
  return df_in

df_final=df_cal_2.groupby('NGUYÊN LIỆU').apply(ham_remain)
df_final['Picking']=df_final['Qty']-df_final['SL_conlai']
df_final.head()

"""# Bước 4: Tìm ngày nhập kho """

for ind, data in df_final.iterrows():
  if (df_final.loc[ind,'Picking']+df_final.loc[ind,'SL_hangthieu'])==df_final.loc[ind,'demand_bom']:
    df_final.loc[ind,'Ngày_nhập_kho']=df_final.loc[ind,'begin_date']
  else:
    if df_final.loc[ind,'SL_hangthieu'] >0.0:
      d=((df_final.loc[ind,'Picking']+df_final.loc[ind,'SL_hangthieu'])//(df_final.loc[ind,'demand_bom']/(df_final.loc[ind,'last_date']-df_final.loc[ind,'begin_date']).days))+1
      df_final.loc[ind,'Ngày_nhập_kho']=df_final.loc[ind,'last_date']-pd.DateOffset(days=d)
    else:
      if df_final.loc[ind,'Picking']>0.0:
        d=(df_final.loc[ind,'Picking']//(df_final.loc[ind,'demand_bom']/(df_final.loc[ind,'last_date']-df_final.loc[ind,'begin_date']).days))+1
        df_final.loc[ind,'Ngày_nhập_kho']=df_final.loc[ind,'last_date']-pd.DateOffset(days=d)
      else:
        df_final.loc[ind,'Ngày_nhập_kho']=None
df_final.head()

ds = df_final['NGUYÊN LIỆU'].unique()
for i in ds:
  a=(df_final['NGUYÊN LIỆU']==i)&(df_final['NHÀ CUNG CẤP'].notna())
  df_final.loc[a,'Ngày_nhập_kho']=df_final.loc[a,'Ngày_nhập_kho'].iloc[0]

df_final_2=df_final[(df_final['Picking']>0.0) | (df_final['NHÀ CUNG CẤP'].isna())].reset_index(drop=True)
for ind, data in df_final_2.iterrows():     
  if pd.isnull(df_final_2.loc[ind,'HSD']):
    if pd.isnull(df_final_2.loc[ind,'shelf_life']):
      df_final_2.loc[ind,'HSD']=None
    else:
      df_final_2.loc[ind,'HSD']=df_final_2.loc[ind,'Ngày_nhập_kho']+pd.DateOffset(days=df_final_2.loc[ind,'shelf_life'])
df_final_2.head()

"""# Bước 5: Xuất file INV, đặt hàng, sử dụng"""

df_picking=df_final_2.groupby(['NGUYÊN LIỆU','ĐƠN VỊ','Ngày_nhập_kho'])['Picking'].sum().to_frame()
df_picking

df_inv_1=df_final_2.loc[df_final_2['SL_conlai']>0.0,['NGUYÊN LIỆU','SL_conlai','ĐƠN VỊ','HSD']]
df_inv_1=pd.concat([df_inv_1,df_conlai],axis=0)
df_inv_1

df_book=df_final_2.loc[df_final_2['NHÀ CUNG CẤP'].notna(),['NGUYÊN LIỆU','Qty','ĐƠN VỊ','NHÀ CUNG CẤP','Ngày_nhập_kho']]
df_book['Ngày_đặt']=df_book['Ngày_nhập_kho']-pd.DateOffset(days=7)
df_book=df_book.groupby(['NGUYÊN LIỆU','ĐƠN VỊ','NHÀ CUNG CẤP','Ngày_nhập_kho','Ngày_đặt'])['Qty'].sum().to_frame()
df_book